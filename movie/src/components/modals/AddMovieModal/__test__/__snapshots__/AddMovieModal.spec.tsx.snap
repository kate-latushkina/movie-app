// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AddMovieModal /> should mount 1`] = `
<AddMovieModal
  onClose={[Function]}
>
  <ForwardRef(Modal)
    className="makeStyles-modalBody-1"
    open={true}
  >
    <ForwardRef(Portal)
      disablePortal={false}
    >
      <Portal
        containerInfo={
          <body
            style="padding-right: 0px; overflow: hidden;"
          >
            <div
              class="makeStyles-modalBody-1"
              role="presentation"
              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
            >
              <div
                aria-hidden="true"
                style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: rgba(0, 0, 0, 0.5);"
              />
              <div
                data-test="sentinelStart"
                tabindex="0"
              />
              <div
                class="makeStyles-modalTitleBlock-3"
              >
                <h2
                  class="makeStyles-modalTitle-2"
                >
                  Add movie
                </h2>
                <button
                  class="makeStyles-closeButton-4"
                  type="button"
                >
                  X
                </button>
              </div>
              <form
                autocomplete="off"
                class="makeStyles-form-5"
                novalidate=""
              >
                <div
                  class="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                >
                  <label
                    class="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                    data-shrink="false"
                  >
                    Title
                  </label>
                  <div
                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                  >
                    <input
                      aria-invalid="false"
                      class="MuiInputBase-input MuiOutlinedInput-input"
                      type="text"
                      value=""
                    />
                    <fieldset
                      aria-hidden="true"
                      class="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                    >
                      <legend
                        class="PrivateNotchedOutline-legendLabelled-14"
                      >
                        <span>
                          Title
                        </span>
                      </legend>
                    </fieldset>
                  </div>
                </div>
                <div
                  class="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                >
                  <label
                    class="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                    data-shrink="true"
                  >
                    Release Date
                  </label>
                  <div
                    class="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldColor-7 MuiInputBase-formControl"
                  >
                    <input
                      aria-invalid="false"
                      class="MuiInputBase-input MuiOutlinedInput-input"
                      type="date"
                      value="2021-01-01"
                    />
                    <fieldset
                      aria-hidden="true"
                      class="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                    >
                      <legend
                        class="PrivateNotchedOutline-legendLabelled-14 PrivateNotchedOutline-legendNotched-15"
                      >
                        <span>
                          Release Date
                        </span>
                      </legend>
                    </fieldset>
                  </div>
                </div>
                <div
                  class="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                >
                  <label
                    class="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                    data-shrink="false"
                  >
                    Movie URL
                  </label>
                  <div
                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                  >
                    <input
                      aria-invalid="false"
                      class="MuiInputBase-input MuiOutlinedInput-input"
                      type="text"
                      value=""
                    />
                    <fieldset
                      aria-hidden="true"
                      class="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                    >
                      <legend
                        class="PrivateNotchedOutline-legendLabelled-14"
                      >
                        <span>
                          Movie URL
                        </span>
                      </legend>
                    </fieldset>
                  </div>
                </div>
                <div
                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary makeStyles-textField-6"
                >
                  <div
                    aria-haspopup="listbox"
                    class="MuiSelect-root MuiSelect-select makeStyles-textFieldColor-7 MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                    role="button"
                    tabindex="0"
                  >
                    Select Genre
                  </div>
                  <input
                    aria-hidden="true"
                    class="MuiSelect-nativeInput"
                    tabindex="-1"
                    value="Select Genre"
                  />
                  <svg
                    aria-hidden="true"
                    class="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined makeStyles-textFieldColor-7"
                    focusable="false"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M7 10l5 5 5-5z"
                    />
                  </svg>
                  <fieldset
                    aria-hidden="true"
                    class="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline"
                    style="padding-left: 8px;"
                  >
                    <legend
                      class="PrivateNotchedOutline-legend-13"
                      style="width: 0.01px;"
                    >
                      <span>
                        â€‹
                      </span>
                    </legend>
                  </fieldset>
                </div>
                <div
                  class="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                >
                  <label
                    class="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                    data-shrink="false"
                  >
                    Overview
                  </label>
                  <div
                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                  >
                    <input
                      aria-invalid="false"
                      class="MuiInputBase-input MuiOutlinedInput-input"
                      type="text"
                      value=""
                    />
                    <fieldset
                      aria-hidden="true"
                      class="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                    >
                      <legend
                        class="PrivateNotchedOutline-legendLabelled-14"
                      >
                        <span>
                          Overview
                        </span>
                      </legend>
                    </fieldset>
                  </div>
                </div>
              </form>
              <div
                class="makeStyles-buttonsBlock-8"
              >
                <button
                  class="makeStyles-buttonReset-9 makeStyles-btn-11"
                  type="button"
                >
                  Reset
                </button>
                <button
                  class="makeStyles-buttonSubmit-10 makeStyles-btn-11"
                  type="button"
                >
                  Submit
                </button>
              </div>
              <div
                data-test="sentinelEnd"
                tabindex="0"
              />
            </div>
          </body>
        }
      >
        <div
          className="makeStyles-modalBody-1"
          onKeyDown={[Function]}
          role="presentation"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "fixed",
              "right": 0,
              "top": 0,
              "zIndex": 1300,
            }
          }
        >
          <ForwardRef(SimpleBackdrop)
            onClick={[Function]}
            open={true}
          >
            <div
              aria-hidden={true}
              onClick={[Function]}
              style={
                Object {
                  "WebkitTapHighlightColor": "transparent",
                  "backgroundColor": "rgba(0, 0, 0, 0.5)",
                  "bottom": 0,
                  "left": 0,
                  "position": "fixed",
                  "right": 0,
                  "top": 0,
                  "zIndex": -1,
                }
              }
            />
          </ForwardRef(SimpleBackdrop)>
          <Unstable_TrapFocus
            disableAutoFocus={false}
            disableEnforceFocus={false}
            disableRestoreFocus={false}
            getDoc={[Function]}
            isEnabled={[Function]}
            open={true}
          >
            <div
              data-test="sentinelStart"
              tabIndex={0}
            />
            <div
              className="makeStyles-modalTitleBlock-3"
            >
              <h2
                className="makeStyles-modalTitle-2"
              >
                Add movie
              </h2>
              <button
                className="makeStyles-closeButton-4"
                onClick={[Function]}
                type="button"
              >
                X
              </button>
            </div>
            <form
              autoComplete="off"
              className="makeStyles-form-5"
              noValidate={true}
            >
              <WithStyles(ForwardRef(TextField))
                InputLabelProps={
                  Object {
                    "classes": Object {
                      "root": "makeStyles-textFieldColor-7",
                    },
                  }
                }
                InputProps={
                  Object {
                    "classes": Object {
                      "notchedOutline": "makeStyles-textFieldColor-7",
                    },
                  }
                }
                className="makeStyles-textField-6"
                label="Title"
                variant="outlined"
              >
                <ForwardRef(TextField)
                  InputLabelProps={
                    Object {
                      "classes": Object {
                        "root": "makeStyles-textFieldColor-7",
                      },
                    }
                  }
                  InputProps={
                    Object {
                      "classes": Object {
                        "notchedOutline": "makeStyles-textFieldColor-7",
                      },
                    }
                  }
                  className="makeStyles-textField-6"
                  classes={
                    Object {
                      "root": "MuiTextField-root",
                    }
                  }
                  label="Title"
                  variant="outlined"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="MuiTextField-root makeStyles-textField-6"
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={false}
                    required={false}
                    variant="outlined"
                  >
                    <ForwardRef(FormControl)
                      className="MuiTextField-root makeStyles-textField-6"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                      color="primary"
                      disabled={false}
                      error={false}
                      fullWidth={false}
                      required={false}
                      variant="outlined"
                    >
                      <div
                        className="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                      >
                        <WithStyles(ForwardRef(InputLabel))
                          classes={
                            Object {
                              "root": "makeStyles-textFieldColor-7",
                            }
                          }
                        >
                          <ForwardRef(InputLabel)
                            classes={
                              Object {
                                "animated": "MuiInputLabel-animated",
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "filled": "MuiInputLabel-filled",
                                "focused": "Mui-focused",
                                "formControl": "MuiInputLabel-formControl",
                                "marginDense": "MuiInputLabel-marginDense",
                                "outlined": "MuiInputLabel-outlined",
                                "required": "Mui-required",
                                "root": "MuiInputLabel-root makeStyles-textFieldColor-7",
                                "shrink": "MuiInputLabel-shrink",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(FormLabel))
                              className="MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                              classes={
                                Object {
                                  "asterisk": "MuiInputLabel-asterisk",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "required": "Mui-required",
                                }
                              }
                              data-shrink={false}
                            >
                              <ForwardRef(FormLabel)
                                className="MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "filled": "MuiFormLabel-filled",
                                    "focused": "Mui-focused Mui-focused",
                                    "required": "Mui-required Mui-required",
                                    "root": "MuiFormLabel-root",
                                  }
                                }
                                data-shrink={false}
                              >
                                <label
                                  className="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                  data-shrink={false}
                                >
                                  Title
                                </label>
                              </ForwardRef(FormLabel)>
                            </WithStyles(ForwardRef(FormLabel))>
                          </ForwardRef(InputLabel)>
                        </WithStyles(ForwardRef(InputLabel))>
                        <WithStyles(ForwardRef(OutlinedInput))
                          autoFocus={false}
                          classes={
                            Object {
                              "notchedOutline": "makeStyles-textFieldColor-7",
                            }
                          }
                          fullWidth={false}
                          label={
                            <React.Fragment>
                              Title
                            </React.Fragment>
                          }
                          multiline={false}
                        >
                          <ForwardRef(OutlinedInput)
                            autoFocus={false}
                            classes={
                              Object {
                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                "marginDense": "MuiOutlinedInput-marginDense",
                                "multiline": "MuiOutlinedInput-multiline",
                                "notchedOutline": "MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7",
                                "root": "MuiOutlinedInput-root",
                              }
                            }
                            fullWidth={false}
                            label={
                              <React.Fragment>
                                Title
                              </React.Fragment>
                            }
                            multiline={false}
                          >
                            <WithStyles(ForwardRef(InputBase))
                              autoFocus={false}
                              classes={
                                Object {
                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "input": "MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                  "marginDense": "MuiOutlinedInput-marginDense",
                                  "multiline": "MuiOutlinedInput-multiline",
                                  "notchedOutline": null,
                                  "root": "MuiOutlinedInput-root",
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              multiline={false}
                              renderSuffix={[Function]}
                              type="text"
                            >
                              <ForwardRef(InputBase)
                                autoFocus={false}
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth",
                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                  }
                                }
                                fullWidth={false}
                                inputComponent="input"
                                multiline={false}
                                renderSuffix={[Function]}
                                type="text"
                              >
                                <div
                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                  onClick={[Function]}
                                >
                                  <input
                                    aria-invalid={false}
                                    autoFocus={false}
                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                    disabled={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    type="text"
                                  />
                                  <WithStyles(ForwardRef(NotchedOutline))
                                    className="MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                    label={
                                      <React.Fragment>
                                        Title
                                      </React.Fragment>
                                    }
                                    labelWidth={0}
                                    notched={false}
                                  >
                                    <ForwardRef(NotchedOutline)
                                      className="MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                      classes={
                                        Object {
                                          "legend": "PrivateNotchedOutline-legend-13",
                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-14",
                                          "legendNotched": "PrivateNotchedOutline-legendNotched-15",
                                          "root": "PrivateNotchedOutline-root-12",
                                        }
                                      }
                                      label={
                                        <React.Fragment>
                                          Title
                                        </React.Fragment>
                                      }
                                      labelWidth={0}
                                      notched={false}
                                    >
                                      <fieldset
                                        aria-hidden={true}
                                        className="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                      >
                                        <legend
                                          className="PrivateNotchedOutline-legendLabelled-14"
                                        >
                                          <span>
                                            Title
                                          </span>
                                        </legend>
                                      </fieldset>
                                    </ForwardRef(NotchedOutline)>
                                  </WithStyles(ForwardRef(NotchedOutline))>
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(OutlinedInput)>
                        </WithStyles(ForwardRef(OutlinedInput))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                </ForwardRef(TextField)>
              </WithStyles(ForwardRef(TextField))>
              <WithStyles(ForwardRef(TextField))
                InputLabelProps={
                  Object {
                    "classes": Object {
                      "root": "makeStyles-textFieldColor-7",
                    },
                  }
                }
                InputProps={
                  Object {
                    "classes": Object {
                      "notchedOutline": "makeStyles-textFieldColor-7",
                      "root": "makeStyles-textFieldColor-7",
                    },
                  }
                }
                className="makeStyles-textField-6"
                defaultValue="2021-01-01"
                label="Release Date"
                type="date"
                variant="outlined"
              >
                <ForwardRef(TextField)
                  InputLabelProps={
                    Object {
                      "classes": Object {
                        "root": "makeStyles-textFieldColor-7",
                      },
                    }
                  }
                  InputProps={
                    Object {
                      "classes": Object {
                        "notchedOutline": "makeStyles-textFieldColor-7",
                        "root": "makeStyles-textFieldColor-7",
                      },
                    }
                  }
                  className="makeStyles-textField-6"
                  classes={
                    Object {
                      "root": "MuiTextField-root",
                    }
                  }
                  defaultValue="2021-01-01"
                  label="Release Date"
                  type="date"
                  variant="outlined"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="MuiTextField-root makeStyles-textField-6"
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={false}
                    required={false}
                    variant="outlined"
                  >
                    <ForwardRef(FormControl)
                      className="MuiTextField-root makeStyles-textField-6"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                      color="primary"
                      disabled={false}
                      error={false}
                      fullWidth={false}
                      required={false}
                      variant="outlined"
                    >
                      <div
                        className="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                      >
                        <WithStyles(ForwardRef(InputLabel))
                          classes={
                            Object {
                              "root": "makeStyles-textFieldColor-7",
                            }
                          }
                        >
                          <ForwardRef(InputLabel)
                            classes={
                              Object {
                                "animated": "MuiInputLabel-animated",
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "filled": "MuiInputLabel-filled",
                                "focused": "Mui-focused",
                                "formControl": "MuiInputLabel-formControl",
                                "marginDense": "MuiInputLabel-marginDense",
                                "outlined": "MuiInputLabel-outlined",
                                "required": "Mui-required",
                                "root": "MuiInputLabel-root makeStyles-textFieldColor-7",
                                "shrink": "MuiInputLabel-shrink",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(FormLabel))
                              className="MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                              classes={
                                Object {
                                  "asterisk": "MuiInputLabel-asterisk",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "required": "Mui-required",
                                }
                              }
                              data-shrink={true}
                            >
                              <ForwardRef(FormLabel)
                                className="MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "filled": "MuiFormLabel-filled",
                                    "focused": "Mui-focused Mui-focused",
                                    "required": "Mui-required Mui-required",
                                    "root": "MuiFormLabel-root",
                                  }
                                }
                                data-shrink={true}
                              >
                                <label
                                  className="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                                  data-shrink={true}
                                >
                                  Release Date
                                </label>
                              </ForwardRef(FormLabel)>
                            </WithStyles(ForwardRef(FormLabel))>
                          </ForwardRef(InputLabel)>
                        </WithStyles(ForwardRef(InputLabel))>
                        <WithStyles(ForwardRef(OutlinedInput))
                          autoFocus={false}
                          classes={
                            Object {
                              "notchedOutline": "makeStyles-textFieldColor-7",
                              "root": "makeStyles-textFieldColor-7",
                            }
                          }
                          defaultValue="2021-01-01"
                          fullWidth={false}
                          label={
                            <React.Fragment>
                              Release Date
                            </React.Fragment>
                          }
                          multiline={false}
                          type="date"
                        >
                          <ForwardRef(OutlinedInput)
                            autoFocus={false}
                            classes={
                              Object {
                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                "marginDense": "MuiOutlinedInput-marginDense",
                                "multiline": "MuiOutlinedInput-multiline",
                                "notchedOutline": "MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7",
                                "root": "MuiOutlinedInput-root makeStyles-textFieldColor-7",
                              }
                            }
                            defaultValue="2021-01-01"
                            fullWidth={false}
                            label={
                              <React.Fragment>
                                Release Date
                              </React.Fragment>
                            }
                            multiline={false}
                            type="date"
                          >
                            <WithStyles(ForwardRef(InputBase))
                              autoFocus={false}
                              classes={
                                Object {
                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "input": "MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                  "marginDense": "MuiOutlinedInput-marginDense",
                                  "multiline": "MuiOutlinedInput-multiline",
                                  "notchedOutline": null,
                                  "root": "MuiOutlinedInput-root makeStyles-textFieldColor-7",
                                }
                              }
                              defaultValue="2021-01-01"
                              fullWidth={false}
                              inputComponent="input"
                              multiline={false}
                              renderSuffix={[Function]}
                              type="date"
                            >
                              <ForwardRef(InputBase)
                                autoFocus={false}
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth",
                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                    "root": "MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldColor-7",
                                  }
                                }
                                defaultValue="2021-01-01"
                                fullWidth={false}
                                inputComponent="input"
                                multiline={false}
                                renderSuffix={[Function]}
                                type="date"
                              >
                                <div
                                  className="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldColor-7 MuiInputBase-formControl"
                                  onClick={[Function]}
                                >
                                  <input
                                    aria-invalid={false}
                                    autoFocus={false}
                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                    defaultValue="2021-01-01"
                                    disabled={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    type="date"
                                  />
                                  <WithStyles(ForwardRef(NotchedOutline))
                                    className="MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                    label={
                                      <React.Fragment>
                                        Release Date
                                      </React.Fragment>
                                    }
                                    labelWidth={0}
                                    notched={true}
                                  >
                                    <ForwardRef(NotchedOutline)
                                      className="MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                      classes={
                                        Object {
                                          "legend": "PrivateNotchedOutline-legend-13",
                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-14",
                                          "legendNotched": "PrivateNotchedOutline-legendNotched-15",
                                          "root": "PrivateNotchedOutline-root-12",
                                        }
                                      }
                                      label={
                                        <React.Fragment>
                                          Release Date
                                        </React.Fragment>
                                      }
                                      labelWidth={0}
                                      notched={true}
                                    >
                                      <fieldset
                                        aria-hidden={true}
                                        className="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                      >
                                        <legend
                                          className="PrivateNotchedOutline-legendLabelled-14 PrivateNotchedOutline-legendNotched-15"
                                        >
                                          <span>
                                            Release Date
                                          </span>
                                        </legend>
                                      </fieldset>
                                    </ForwardRef(NotchedOutline)>
                                  </WithStyles(ForwardRef(NotchedOutline))>
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(OutlinedInput)>
                        </WithStyles(ForwardRef(OutlinedInput))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                </ForwardRef(TextField)>
              </WithStyles(ForwardRef(TextField))>
              <WithStyles(ForwardRef(TextField))
                InputLabelProps={
                  Object {
                    "classes": Object {
                      "root": "makeStyles-textFieldColor-7",
                    },
                  }
                }
                InputProps={
                  Object {
                    "classes": Object {
                      "notchedOutline": "makeStyles-textFieldColor-7",
                    },
                  }
                }
                className="makeStyles-textField-6"
                label="Movie URL"
                variant="outlined"
              >
                <ForwardRef(TextField)
                  InputLabelProps={
                    Object {
                      "classes": Object {
                        "root": "makeStyles-textFieldColor-7",
                      },
                    }
                  }
                  InputProps={
                    Object {
                      "classes": Object {
                        "notchedOutline": "makeStyles-textFieldColor-7",
                      },
                    }
                  }
                  className="makeStyles-textField-6"
                  classes={
                    Object {
                      "root": "MuiTextField-root",
                    }
                  }
                  label="Movie URL"
                  variant="outlined"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="MuiTextField-root makeStyles-textField-6"
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={false}
                    required={false}
                    variant="outlined"
                  >
                    <ForwardRef(FormControl)
                      className="MuiTextField-root makeStyles-textField-6"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                      color="primary"
                      disabled={false}
                      error={false}
                      fullWidth={false}
                      required={false}
                      variant="outlined"
                    >
                      <div
                        className="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                      >
                        <WithStyles(ForwardRef(InputLabel))
                          classes={
                            Object {
                              "root": "makeStyles-textFieldColor-7",
                            }
                          }
                        >
                          <ForwardRef(InputLabel)
                            classes={
                              Object {
                                "animated": "MuiInputLabel-animated",
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "filled": "MuiInputLabel-filled",
                                "focused": "Mui-focused",
                                "formControl": "MuiInputLabel-formControl",
                                "marginDense": "MuiInputLabel-marginDense",
                                "outlined": "MuiInputLabel-outlined",
                                "required": "Mui-required",
                                "root": "MuiInputLabel-root makeStyles-textFieldColor-7",
                                "shrink": "MuiInputLabel-shrink",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(FormLabel))
                              className="MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                              classes={
                                Object {
                                  "asterisk": "MuiInputLabel-asterisk",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "required": "Mui-required",
                                }
                              }
                              data-shrink={false}
                            >
                              <ForwardRef(FormLabel)
                                className="MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "filled": "MuiFormLabel-filled",
                                    "focused": "Mui-focused Mui-focused",
                                    "required": "Mui-required Mui-required",
                                    "root": "MuiFormLabel-root",
                                  }
                                }
                                data-shrink={false}
                              >
                                <label
                                  className="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                  data-shrink={false}
                                >
                                  Movie URL
                                </label>
                              </ForwardRef(FormLabel)>
                            </WithStyles(ForwardRef(FormLabel))>
                          </ForwardRef(InputLabel)>
                        </WithStyles(ForwardRef(InputLabel))>
                        <WithStyles(ForwardRef(OutlinedInput))
                          autoFocus={false}
                          classes={
                            Object {
                              "notchedOutline": "makeStyles-textFieldColor-7",
                            }
                          }
                          fullWidth={false}
                          label={
                            <React.Fragment>
                              Movie URL
                            </React.Fragment>
                          }
                          multiline={false}
                        >
                          <ForwardRef(OutlinedInput)
                            autoFocus={false}
                            classes={
                              Object {
                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                "marginDense": "MuiOutlinedInput-marginDense",
                                "multiline": "MuiOutlinedInput-multiline",
                                "notchedOutline": "MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7",
                                "root": "MuiOutlinedInput-root",
                              }
                            }
                            fullWidth={false}
                            label={
                              <React.Fragment>
                                Movie URL
                              </React.Fragment>
                            }
                            multiline={false}
                          >
                            <WithStyles(ForwardRef(InputBase))
                              autoFocus={false}
                              classes={
                                Object {
                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "input": "MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                  "marginDense": "MuiOutlinedInput-marginDense",
                                  "multiline": "MuiOutlinedInput-multiline",
                                  "notchedOutline": null,
                                  "root": "MuiOutlinedInput-root",
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              multiline={false}
                              renderSuffix={[Function]}
                              type="text"
                            >
                              <ForwardRef(InputBase)
                                autoFocus={false}
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth",
                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                  }
                                }
                                fullWidth={false}
                                inputComponent="input"
                                multiline={false}
                                renderSuffix={[Function]}
                                type="text"
                              >
                                <div
                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                  onClick={[Function]}
                                >
                                  <input
                                    aria-invalid={false}
                                    autoFocus={false}
                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                    disabled={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    type="text"
                                  />
                                  <WithStyles(ForwardRef(NotchedOutline))
                                    className="MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                    label={
                                      <React.Fragment>
                                        Movie URL
                                      </React.Fragment>
                                    }
                                    labelWidth={0}
                                    notched={false}
                                  >
                                    <ForwardRef(NotchedOutline)
                                      className="MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                      classes={
                                        Object {
                                          "legend": "PrivateNotchedOutline-legend-13",
                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-14",
                                          "legendNotched": "PrivateNotchedOutline-legendNotched-15",
                                          "root": "PrivateNotchedOutline-root-12",
                                        }
                                      }
                                      label={
                                        <React.Fragment>
                                          Movie URL
                                        </React.Fragment>
                                      }
                                      labelWidth={0}
                                      notched={false}
                                    >
                                      <fieldset
                                        aria-hidden={true}
                                        className="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                      >
                                        <legend
                                          className="PrivateNotchedOutline-legendLabelled-14"
                                        >
                                          <span>
                                            Movie URL
                                          </span>
                                        </legend>
                                      </fieldset>
                                    </ForwardRef(NotchedOutline)>
                                  </WithStyles(ForwardRef(NotchedOutline))>
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(OutlinedInput)>
                        </WithStyles(ForwardRef(OutlinedInput))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                </ForwardRef(TextField)>
              </WithStyles(ForwardRef(TextField))>
              <WithStyles(ForwardRef(Select))
                className="makeStyles-textField-6"
                color="secondary"
                defaultValue="Select Genre"
                inputProps={
                  Object {
                    "classes": Object {
                      "iconOutlined": "makeStyles-textFieldColor-7",
                      "select": "makeStyles-textFieldColor-7",
                    },
                  }
                }
                variant="outlined"
              >
                <ForwardRef(Select)
                  className="makeStyles-textField-6"
                  classes={
                    Object {
                      "disabled": "Mui-disabled",
                      "filled": "MuiSelect-filled",
                      "icon": "MuiSelect-icon",
                      "iconFilled": "MuiSelect-iconFilled",
                      "iconOpen": "MuiSelect-iconOpen",
                      "iconOutlined": "MuiSelect-iconOutlined",
                      "nativeInput": "MuiSelect-nativeInput",
                      "outlined": "MuiSelect-outlined",
                      "root": "MuiSelect-root",
                      "select": "MuiSelect-select",
                      "selectMenu": "MuiSelect-selectMenu",
                    }
                  }
                  color="secondary"
                  defaultValue="Select Genre"
                  inputProps={
                    Object {
                      "classes": Object {
                        "iconOutlined": "makeStyles-textFieldColor-7",
                        "select": "makeStyles-textFieldColor-7",
                      },
                    }
                  }
                  variant="outlined"
                >
                  <WithStyles(ForwardRef(OutlinedInput))
                    className="makeStyles-textField-6"
                    color="secondary"
                    defaultValue="Select Genre"
                    inputComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "propTypes": Object {
                          "IconComponent": [Function],
                          "MenuProps": [Function],
                          "SelectDisplayProps": [Function],
                          "aria-label": [Function],
                          "autoFocus": [Function],
                          "autoWidth": [Function],
                          "children": [Function],
                          "className": [Function],
                          "classes": [Function],
                          "defaultValue": [Function],
                          "disabled": [Function],
                          "displayEmpty": [Function],
                          "inputRef": [Function],
                          "labelId": [Function],
                          "multiple": [Function],
                          "name": [Function],
                          "onBlur": [Function],
                          "onChange": [Function],
                          "onClose": [Function],
                          "onFocus": [Function],
                          "onOpen": [Function],
                          "open": [Function],
                          "readOnly": [Function],
                          "renderValue": [Function],
                          "tabIndex": [Function],
                          "type": [Function],
                          "value": [Function],
                          "variant": [Function],
                        },
                        "render": [Function],
                      }
                    }
                    inputProps={
                      Object {
                        "IconComponent": Object {
                          "$$typeof": Symbol(react.memo),
                          "compare": null,
                          "type": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                        },
                        "MenuProps": undefined,
                        "SelectDisplayProps": Object {
                          "id": undefined,
                        },
                        "autoWidth": false,
                        "children": Array [
                          <WithStyles(ForwardRef(MenuItem))
                            value="Select Genre"
                          >
                            Select Genre
                          </WithStyles(ForwardRef(MenuItem))>,
                          <WithStyles(ForwardRef(MenuItem))
                            value="Select Genre"
                          >
                            Select Genre
                          </WithStyles(ForwardRef(MenuItem))>,
                        ],
                        "classes": Object {
                          "disabled": "Mui-disabled",
                          "filled": "MuiSelect-filled",
                          "icon": "MuiSelect-icon",
                          "iconFilled": "MuiSelect-iconFilled",
                          "iconOpen": "MuiSelect-iconOpen",
                          "iconOutlined": "MuiSelect-iconOutlined makeStyles-textFieldColor-7",
                          "nativeInput": "MuiSelect-nativeInput",
                          "outlined": "MuiSelect-outlined",
                          "root": "MuiSelect-root",
                          "select": "MuiSelect-select makeStyles-textFieldColor-7",
                          "selectMenu": "MuiSelect-selectMenu",
                        },
                        "displayEmpty": false,
                        "labelId": undefined,
                        "multiple": false,
                        "onClose": undefined,
                        "onOpen": undefined,
                        "open": undefined,
                        "renderValue": undefined,
                        "type": undefined,
                        "variant": "outlined",
                      }
                    }
                    labelWidth={0}
                  >
                    <ForwardRef(OutlinedInput)
                      className="makeStyles-textField-6"
                      classes={
                        Object {
                          "adornedEnd": "MuiOutlinedInput-adornedEnd",
                          "adornedStart": "MuiOutlinedInput-adornedStart",
                          "colorSecondary": "MuiOutlinedInput-colorSecondary",
                          "disabled": "Mui-disabled",
                          "error": "Mui-error",
                          "focused": "Mui-focused",
                          "input": "MuiOutlinedInput-input",
                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                          "inputMultiline": "MuiOutlinedInput-inputMultiline",
                          "marginDense": "MuiOutlinedInput-marginDense",
                          "multiline": "MuiOutlinedInput-multiline",
                          "notchedOutline": "MuiOutlinedInput-notchedOutline",
                          "root": "MuiOutlinedInput-root",
                        }
                      }
                      color="secondary"
                      defaultValue="Select Genre"
                      inputComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "propTypes": Object {
                            "IconComponent": [Function],
                            "MenuProps": [Function],
                            "SelectDisplayProps": [Function],
                            "aria-label": [Function],
                            "autoFocus": [Function],
                            "autoWidth": [Function],
                            "children": [Function],
                            "className": [Function],
                            "classes": [Function],
                            "defaultValue": [Function],
                            "disabled": [Function],
                            "displayEmpty": [Function],
                            "inputRef": [Function],
                            "labelId": [Function],
                            "multiple": [Function],
                            "name": [Function],
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onClose": [Function],
                            "onFocus": [Function],
                            "onOpen": [Function],
                            "open": [Function],
                            "readOnly": [Function],
                            "renderValue": [Function],
                            "tabIndex": [Function],
                            "type": [Function],
                            "value": [Function],
                            "variant": [Function],
                          },
                          "render": [Function],
                        }
                      }
                      inputProps={
                        Object {
                          "IconComponent": Object {
                            "$$typeof": Symbol(react.memo),
                            "compare": null,
                            "type": Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "render": [Function],
                            },
                          },
                          "MenuProps": undefined,
                          "SelectDisplayProps": Object {
                            "id": undefined,
                          },
                          "autoWidth": false,
                          "children": Array [
                            <WithStyles(ForwardRef(MenuItem))
                              value="Select Genre"
                            >
                              Select Genre
                            </WithStyles(ForwardRef(MenuItem))>,
                            <WithStyles(ForwardRef(MenuItem))
                              value="Select Genre"
                            >
                              Select Genre
                            </WithStyles(ForwardRef(MenuItem))>,
                          ],
                          "classes": Object {
                            "disabled": "Mui-disabled",
                            "filled": "MuiSelect-filled",
                            "icon": "MuiSelect-icon",
                            "iconFilled": "MuiSelect-iconFilled",
                            "iconOpen": "MuiSelect-iconOpen",
                            "iconOutlined": "MuiSelect-iconOutlined makeStyles-textFieldColor-7",
                            "nativeInput": "MuiSelect-nativeInput",
                            "outlined": "MuiSelect-outlined",
                            "root": "MuiSelect-root",
                            "select": "MuiSelect-select makeStyles-textFieldColor-7",
                            "selectMenu": "MuiSelect-selectMenu",
                          },
                          "displayEmpty": false,
                          "labelId": undefined,
                          "multiple": false,
                          "onClose": undefined,
                          "onOpen": undefined,
                          "open": undefined,
                          "renderValue": undefined,
                          "type": undefined,
                          "variant": "outlined",
                        }
                      }
                      labelWidth={0}
                    >
                      <WithStyles(ForwardRef(InputBase))
                        className="makeStyles-textField-6"
                        classes={
                          Object {
                            "adornedEnd": "MuiOutlinedInput-adornedEnd",
                            "adornedStart": "MuiOutlinedInput-adornedStart",
                            "colorSecondary": "MuiOutlinedInput-colorSecondary",
                            "disabled": "Mui-disabled",
                            "error": "Mui-error",
                            "focused": "Mui-focused",
                            "input": "MuiOutlinedInput-input",
                            "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                            "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                            "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                            "inputMultiline": "MuiOutlinedInput-inputMultiline",
                            "marginDense": "MuiOutlinedInput-marginDense",
                            "multiline": "MuiOutlinedInput-multiline",
                            "notchedOutline": null,
                            "root": "MuiOutlinedInput-root",
                          }
                        }
                        color="secondary"
                        defaultValue="Select Genre"
                        fullWidth={false}
                        inputComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "propTypes": Object {
                              "IconComponent": [Function],
                              "MenuProps": [Function],
                              "SelectDisplayProps": [Function],
                              "aria-label": [Function],
                              "autoFocus": [Function],
                              "autoWidth": [Function],
                              "children": [Function],
                              "className": [Function],
                              "classes": [Function],
                              "defaultValue": [Function],
                              "disabled": [Function],
                              "displayEmpty": [Function],
                              "inputRef": [Function],
                              "labelId": [Function],
                              "multiple": [Function],
                              "name": [Function],
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onClose": [Function],
                              "onFocus": [Function],
                              "onOpen": [Function],
                              "open": [Function],
                              "readOnly": [Function],
                              "renderValue": [Function],
                              "tabIndex": [Function],
                              "type": [Function],
                              "value": [Function],
                              "variant": [Function],
                            },
                            "render": [Function],
                          }
                        }
                        inputProps={
                          Object {
                            "IconComponent": Object {
                              "$$typeof": Symbol(react.memo),
                              "compare": null,
                              "type": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "render": [Function],
                              },
                            },
                            "MenuProps": undefined,
                            "SelectDisplayProps": Object {
                              "id": undefined,
                            },
                            "autoWidth": false,
                            "children": Array [
                              <WithStyles(ForwardRef(MenuItem))
                                value="Select Genre"
                              >
                                Select Genre
                              </WithStyles(ForwardRef(MenuItem))>,
                              <WithStyles(ForwardRef(MenuItem))
                                value="Select Genre"
                              >
                                Select Genre
                              </WithStyles(ForwardRef(MenuItem))>,
                            ],
                            "classes": Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon",
                              "iconFilled": "MuiSelect-iconFilled",
                              "iconOpen": "MuiSelect-iconOpen",
                              "iconOutlined": "MuiSelect-iconOutlined makeStyles-textFieldColor-7",
                              "nativeInput": "MuiSelect-nativeInput",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select makeStyles-textFieldColor-7",
                              "selectMenu": "MuiSelect-selectMenu",
                            },
                            "displayEmpty": false,
                            "labelId": undefined,
                            "multiple": false,
                            "onClose": undefined,
                            "onOpen": undefined,
                            "open": undefined,
                            "renderValue": undefined,
                            "type": undefined,
                            "variant": "outlined",
                          }
                        }
                        multiline={false}
                        renderSuffix={[Function]}
                        type="text"
                      >
                        <ForwardRef(InputBase)
                          className="makeStyles-textField-6"
                          classes={
                            Object {
                              "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                              "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                              "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                              "disabled": "Mui-disabled Mui-disabled",
                              "error": "Mui-error Mui-error",
                              "focused": "Mui-focused Mui-focused",
                              "formControl": "MuiInputBase-formControl",
                              "fullWidth": "MuiInputBase-fullWidth",
                              "input": "MuiInputBase-input MuiOutlinedInput-input",
                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                              "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                              "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                              "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                              "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                              "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                              "root": "MuiInputBase-root MuiOutlinedInput-root",
                            }
                          }
                          color="secondary"
                          defaultValue="Select Genre"
                          fullWidth={false}
                          inputComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "propTypes": Object {
                                "IconComponent": [Function],
                                "MenuProps": [Function],
                                "SelectDisplayProps": [Function],
                                "aria-label": [Function],
                                "autoFocus": [Function],
                                "autoWidth": [Function],
                                "children": [Function],
                                "className": [Function],
                                "classes": [Function],
                                "defaultValue": [Function],
                                "disabled": [Function],
                                "displayEmpty": [Function],
                                "inputRef": [Function],
                                "labelId": [Function],
                                "multiple": [Function],
                                "name": [Function],
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onClose": [Function],
                                "onFocus": [Function],
                                "onOpen": [Function],
                                "open": [Function],
                                "readOnly": [Function],
                                "renderValue": [Function],
                                "tabIndex": [Function],
                                "type": [Function],
                                "value": [Function],
                                "variant": [Function],
                              },
                              "render": [Function],
                            }
                          }
                          inputProps={
                            Object {
                              "IconComponent": Object {
                                "$$typeof": Symbol(react.memo),
                                "compare": null,
                                "type": Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "render": [Function],
                                },
                              },
                              "MenuProps": undefined,
                              "SelectDisplayProps": Object {
                                "id": undefined,
                              },
                              "autoWidth": false,
                              "children": Array [
                                <WithStyles(ForwardRef(MenuItem))
                                  value="Select Genre"
                                >
                                  Select Genre
                                </WithStyles(ForwardRef(MenuItem))>,
                                <WithStyles(ForwardRef(MenuItem))
                                  value="Select Genre"
                                >
                                  Select Genre
                                </WithStyles(ForwardRef(MenuItem))>,
                              ],
                              "classes": Object {
                                "disabled": "Mui-disabled",
                                "filled": "MuiSelect-filled",
                                "icon": "MuiSelect-icon",
                                "iconFilled": "MuiSelect-iconFilled",
                                "iconOpen": "MuiSelect-iconOpen",
                                "iconOutlined": "MuiSelect-iconOutlined makeStyles-textFieldColor-7",
                                "nativeInput": "MuiSelect-nativeInput",
                                "outlined": "MuiSelect-outlined",
                                "root": "MuiSelect-root",
                                "select": "MuiSelect-select makeStyles-textFieldColor-7",
                                "selectMenu": "MuiSelect-selectMenu",
                              },
                              "displayEmpty": false,
                              "labelId": undefined,
                              "multiple": false,
                              "onClose": undefined,
                              "onOpen": undefined,
                              "open": undefined,
                              "renderValue": undefined,
                              "type": undefined,
                              "variant": "outlined",
                            }
                          }
                          multiline={false}
                          renderSuffix={[Function]}
                          type="text"
                        >
                          <div
                            className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary makeStyles-textField-6"
                            onClick={[Function]}
                          >
                            <ForwardRef(SelectInput)
                              IconComponent={
                                Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                }
                              }
                              SelectDisplayProps={
                                Object {
                                  "id": undefined,
                                }
                              }
                              autoWidth={false}
                              className="MuiInputBase-input MuiOutlinedInput-input"
                              classes={
                                Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined makeStyles-textFieldColor-7",
                                  "nativeInput": "MuiSelect-nativeInput",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select makeStyles-textFieldColor-7",
                                  "selectMenu": "MuiSelect-selectMenu",
                                }
                              }
                              defaultValue="Select Genre"
                              displayEmpty={false}
                              inputRef={[Function]}
                              multiple={false}
                              onAnimationStart={[Function]}
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              variant="outlined"
                            >
                              <div
                                aria-haspopup="listbox"
                                className="MuiSelect-root MuiSelect-select makeStyles-textFieldColor-7 MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                onBlur={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onMouseDown={[Function]}
                                role="button"
                                tabIndex={0}
                              >
                                Select Genre
                              </div>
                              <input
                                aria-hidden={true}
                                className="MuiSelect-nativeInput"
                                onAnimationStart={[Function]}
                                onChange={[Function]}
                                tabIndex={-1}
                                value="Select Genre"
                              />
                              <ForwardRef(ArrowDropDownIcon)
                                className="MuiSelect-icon MuiSelect-iconOutlined makeStyles-textFieldColor-7"
                              >
                                <WithStyles(ForwardRef(SvgIcon))
                                  className="MuiSelect-icon MuiSelect-iconOutlined makeStyles-textFieldColor-7"
                                >
                                  <ForwardRef(SvgIcon)
                                    className="MuiSelect-icon MuiSelect-iconOutlined makeStyles-textFieldColor-7"
                                    classes={
                                      Object {
                                        "colorAction": "MuiSvgIcon-colorAction",
                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                        "colorError": "MuiSvgIcon-colorError",
                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                        "root": "MuiSvgIcon-root",
                                      }
                                    }
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined makeStyles-textFieldColor-7"
                                      focusable="false"
                                      viewBox="0 0 24 24"
                                    >
                                      <path
                                        d="M7 10l5 5 5-5z"
                                      />
                                    </svg>
                                  </ForwardRef(SvgIcon)>
                                </WithStyles(ForwardRef(SvgIcon))>
                              </ForwardRef(ArrowDropDownIcon)>
                              <WithStyles(ForwardRef(Menu))
                                MenuListProps={
                                  Object {
                                    "aria-labelledby": undefined,
                                    "disableListWrap": true,
                                    "role": "listbox",
                                  }
                                }
                                PaperProps={
                                  Object {
                                    "style": Object {
                                      "minWidth": undefined,
                                    },
                                  }
                                }
                                anchorEl={
                                  <div
                                    aria-haspopup="listbox"
                                    class="MuiSelect-root MuiSelect-select makeStyles-textFieldColor-7 MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                    role="button"
                                    tabindex="0"
                                  >
                                    Select Genre
                                  </div>
                                }
                                id="menu-"
                                onClose={[Function]}
                                open={false}
                              >
                                <ForwardRef(Menu)
                                  MenuListProps={
                                    Object {
                                      "aria-labelledby": undefined,
                                      "disableListWrap": true,
                                      "role": "listbox",
                                    }
                                  }
                                  PaperProps={
                                    Object {
                                      "style": Object {
                                        "minWidth": undefined,
                                      },
                                    }
                                  }
                                  anchorEl={
                                    <div
                                      aria-haspopup="listbox"
                                      class="MuiSelect-root MuiSelect-select makeStyles-textFieldColor-7 MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                      role="button"
                                      tabindex="0"
                                    >
                                      Select Genre
                                    </div>
                                  }
                                  classes={
                                    Object {
                                      "list": "MuiMenu-list",
                                      "paper": "MuiMenu-paper",
                                    }
                                  }
                                  id="menu-"
                                  onClose={[Function]}
                                  open={false}
                                >
                                  <WithStyles(ForwardRef(Popover))
                                    PaperProps={
                                      Object {
                                        "classes": Object {
                                          "root": "MuiMenu-paper",
                                        },
                                        "style": Object {
                                          "minWidth": undefined,
                                        },
                                      }
                                    }
                                    anchorEl={
                                      <div
                                        aria-haspopup="listbox"
                                        class="MuiSelect-root MuiSelect-select makeStyles-textFieldColor-7 MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                        role="button"
                                        tabindex="0"
                                      >
                                        Select Genre
                                      </div>
                                    }
                                    anchorOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    getContentAnchorEl={[Function]}
                                    id="menu-"
                                    onClose={[Function]}
                                    onEntering={[Function]}
                                    open={false}
                                    transformOrigin={
                                      Object {
                                        "horizontal": "left",
                                        "vertical": "top",
                                      }
                                    }
                                    transitionDuration="auto"
                                  >
                                    <ForwardRef(Popover)
                                      PaperProps={
                                        Object {
                                          "classes": Object {
                                            "root": "MuiMenu-paper",
                                          },
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          class="MuiSelect-root MuiSelect-select makeStyles-textFieldColor-7 MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                          role="button"
                                          tabindex="0"
                                        >
                                          Select Genre
                                        </div>
                                      }
                                      anchorOrigin={
                                        Object {
                                          "horizontal": "left",
                                          "vertical": "top",
                                        }
                                      }
                                      classes={
                                        Object {
                                          "paper": "MuiPopover-paper",
                                          "root": "MuiPopover-root",
                                        }
                                      }
                                      getContentAnchorEl={[Function]}
                                      id="menu-"
                                      onClose={[Function]}
                                      onEntering={[Function]}
                                      open={false}
                                      transformOrigin={
                                        Object {
                                          "horizontal": "left",
                                          "vertical": "top",
                                        }
                                      }
                                      transitionDuration="auto"
                                    >
                                      <ForwardRef(Modal)
                                        BackdropProps={
                                          Object {
                                            "invisible": true,
                                          }
                                        }
                                        className="MuiPopover-root"
                                        container={
                                          <body
                                            style="padding-right: 0px; overflow: hidden;"
                                          >
                                            <div
                                              class="makeStyles-modalBody-1"
                                              role="presentation"
                                              style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
                                            >
                                              <div
                                                aria-hidden="true"
                                                style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: rgba(0, 0, 0, 0.5);"
                                              />
                                              <div
                                                data-test="sentinelStart"
                                                tabindex="0"
                                              />
                                              <div
                                                class="makeStyles-modalTitleBlock-3"
                                              >
                                                <h2
                                                  class="makeStyles-modalTitle-2"
                                                >
                                                  Add movie
                                                </h2>
                                                <button
                                                  class="makeStyles-closeButton-4"
                                                  type="button"
                                                >
                                                  X
                                                </button>
                                              </div>
                                              <form
                                                autocomplete="off"
                                                class="makeStyles-form-5"
                                                novalidate=""
                                              >
                                                <div
                                                  class="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                                                >
                                                  <label
                                                    class="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                    data-shrink="false"
                                                  >
                                                    Title
                                                  </label>
                                                  <div
                                                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                                  >
                                                    <input
                                                      aria-invalid="false"
                                                      class="MuiInputBase-input MuiOutlinedInput-input"
                                                      type="text"
                                                      value=""
                                                    />
                                                    <fieldset
                                                      aria-hidden="true"
                                                      class="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                                    >
                                                      <legend
                                                        class="PrivateNotchedOutline-legendLabelled-14"
                                                      >
                                                        <span>
                                                          Title
                                                        </span>
                                                      </legend>
                                                    </fieldset>
                                                  </div>
                                                </div>
                                                <div
                                                  class="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                                                >
                                                  <label
                                                    class="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiInputLabel-outlined MuiFormLabel-filled"
                                                    data-shrink="true"
                                                  >
                                                    Release Date
                                                  </label>
                                                  <div
                                                    class="MuiInputBase-root MuiOutlinedInput-root makeStyles-textFieldColor-7 MuiInputBase-formControl"
                                                  >
                                                    <input
                                                      aria-invalid="false"
                                                      class="MuiInputBase-input MuiOutlinedInput-input"
                                                      type="date"
                                                      value="2021-01-01"
                                                    />
                                                    <fieldset
                                                      aria-hidden="true"
                                                      class="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                                    >
                                                      <legend
                                                        class="PrivateNotchedOutline-legendLabelled-14 PrivateNotchedOutline-legendNotched-15"
                                                      >
                                                        <span>
                                                          Release Date
                                                        </span>
                                                      </legend>
                                                    </fieldset>
                                                  </div>
                                                </div>
                                                <div
                                                  class="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                                                >
                                                  <label
                                                    class="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                    data-shrink="false"
                                                  >
                                                    Movie URL
                                                  </label>
                                                  <div
                                                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                                  >
                                                    <input
                                                      aria-invalid="false"
                                                      class="MuiInputBase-input MuiOutlinedInput-input"
                                                      type="text"
                                                      value=""
                                                    />
                                                    <fieldset
                                                      aria-hidden="true"
                                                      class="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                                    >
                                                      <legend
                                                        class="PrivateNotchedOutline-legendLabelled-14"
                                                      >
                                                        <span>
                                                          Movie URL
                                                        </span>
                                                      </legend>
                                                    </fieldset>
                                                  </div>
                                                </div>
                                                <div
                                                  class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary makeStyles-textField-6"
                                                >
                                                  <div
                                                    aria-haspopup="listbox"
                                                    class="MuiSelect-root MuiSelect-select makeStyles-textFieldColor-7 MuiSelect-selectMenu MuiSelect-outlined MuiInputBase-input MuiOutlinedInput-input"
                                                    role="button"
                                                    tabindex="0"
                                                  >
                                                    Select Genre
                                                  </div>
                                                  <input
                                                    aria-hidden="true"
                                                    class="MuiSelect-nativeInput"
                                                    tabindex="-1"
                                                    value="Select Genre"
                                                  />
                                                  <svg
                                                    aria-hidden="true"
                                                    class="MuiSvgIcon-root MuiSelect-icon MuiSelect-iconOutlined makeStyles-textFieldColor-7"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M7 10l5 5 5-5z"
                                                    />
                                                  </svg>
                                                  <fieldset
                                                    aria-hidden="true"
                                                    class="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline"
                                                    style="padding-left: 8px;"
                                                  >
                                                    <legend
                                                      class="PrivateNotchedOutline-legend-13"
                                                      style="width: 0.01px;"
                                                    >
                                                      <span>
                                                        â€‹
                                                      </span>
                                                    </legend>
                                                  </fieldset>
                                                </div>
                                                <div
                                                  class="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                                                >
                                                  <label
                                                    class="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                    data-shrink="false"
                                                  >
                                                    Overview
                                                  </label>
                                                  <div
                                                    class="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                                  >
                                                    <input
                                                      aria-invalid="false"
                                                      class="MuiInputBase-input MuiOutlinedInput-input"
                                                      type="text"
                                                      value=""
                                                    />
                                                    <fieldset
                                                      aria-hidden="true"
                                                      class="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                                    >
                                                      <legend
                                                        class="PrivateNotchedOutline-legendLabelled-14"
                                                      >
                                                        <span>
                                                          Overview
                                                        </span>
                                                      </legend>
                                                    </fieldset>
                                                  </div>
                                                </div>
                                              </form>
                                              <div
                                                class="makeStyles-buttonsBlock-8"
                                              >
                                                <button
                                                  class="makeStyles-buttonReset-9 makeStyles-btn-11"
                                                  type="button"
                                                >
                                                  Reset
                                                </button>
                                                <button
                                                  class="makeStyles-buttonSubmit-10 makeStyles-btn-11"
                                                  type="button"
                                                >
                                                  Submit
                                                </button>
                                              </div>
                                              <div
                                                data-test="sentinelEnd"
                                                tabindex="0"
                                              />
                                            </div>
                                          </body>
                                        }
                                        id="menu-"
                                        onClose={[Function]}
                                        open={false}
                                      />
                                    </ForwardRef(Popover)>
                                  </WithStyles(ForwardRef(Popover))>
                                </ForwardRef(Menu)>
                              </WithStyles(ForwardRef(Menu))>
                            </ForwardRef(SelectInput)>
                            <WithStyles(ForwardRef(NotchedOutline))
                              className="MuiOutlinedInput-notchedOutline"
                              labelWidth={0}
                              notched={false}
                            >
                              <ForwardRef(NotchedOutline)
                                className="MuiOutlinedInput-notchedOutline"
                                classes={
                                  Object {
                                    "legend": "PrivateNotchedOutline-legend-13",
                                    "legendLabelled": "PrivateNotchedOutline-legendLabelled-14",
                                    "legendNotched": "PrivateNotchedOutline-legendNotched-15",
                                    "root": "PrivateNotchedOutline-root-12",
                                  }
                                }
                                labelWidth={0}
                                notched={false}
                              >
                                <fieldset
                                  aria-hidden={true}
                                  className="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline"
                                  style={
                                    Object {
                                      "paddingLeft": 8,
                                    }
                                  }
                                >
                                  <legend
                                    className="PrivateNotchedOutline-legend-13"
                                    style={
                                      Object {
                                        "width": 0.01,
                                      }
                                    }
                                  >
                                    <span
                                      dangerouslySetInnerHTML={
                                        Object {
                                          "__html": "&#8203;",
                                        }
                                      }
                                    />
                                  </legend>
                                </fieldset>
                              </ForwardRef(NotchedOutline)>
                            </WithStyles(ForwardRef(NotchedOutline))>
                          </div>
                        </ForwardRef(InputBase)>
                      </WithStyles(ForwardRef(InputBase))>
                    </ForwardRef(OutlinedInput)>
                  </WithStyles(ForwardRef(OutlinedInput))>
                </ForwardRef(Select)>
              </WithStyles(ForwardRef(Select))>
              <WithStyles(ForwardRef(TextField))
                InputLabelProps={
                  Object {
                    "classes": Object {
                      "root": "makeStyles-textFieldColor-7",
                    },
                  }
                }
                InputProps={
                  Object {
                    "classes": Object {
                      "notchedOutline": "makeStyles-textFieldColor-7",
                    },
                  }
                }
                className="makeStyles-textField-6"
                label="Overview"
                variant="outlined"
              >
                <ForwardRef(TextField)
                  InputLabelProps={
                    Object {
                      "classes": Object {
                        "root": "makeStyles-textFieldColor-7",
                      },
                    }
                  }
                  InputProps={
                    Object {
                      "classes": Object {
                        "notchedOutline": "makeStyles-textFieldColor-7",
                      },
                    }
                  }
                  className="makeStyles-textField-6"
                  classes={
                    Object {
                      "root": "MuiTextField-root",
                    }
                  }
                  label="Overview"
                  variant="outlined"
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="MuiTextField-root makeStyles-textField-6"
                    color="primary"
                    disabled={false}
                    error={false}
                    fullWidth={false}
                    required={false}
                    variant="outlined"
                  >
                    <ForwardRef(FormControl)
                      className="MuiTextField-root makeStyles-textField-6"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                      color="primary"
                      disabled={false}
                      error={false}
                      fullWidth={false}
                      required={false}
                      variant="outlined"
                    >
                      <div
                        className="MuiFormControl-root MuiTextField-root makeStyles-textField-6"
                      >
                        <WithStyles(ForwardRef(InputLabel))
                          classes={
                            Object {
                              "root": "makeStyles-textFieldColor-7",
                            }
                          }
                        >
                          <ForwardRef(InputLabel)
                            classes={
                              Object {
                                "animated": "MuiInputLabel-animated",
                                "asterisk": "MuiInputLabel-asterisk",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "filled": "MuiInputLabel-filled",
                                "focused": "Mui-focused",
                                "formControl": "MuiInputLabel-formControl",
                                "marginDense": "MuiInputLabel-marginDense",
                                "outlined": "MuiInputLabel-outlined",
                                "required": "Mui-required",
                                "root": "MuiInputLabel-root makeStyles-textFieldColor-7",
                                "shrink": "MuiInputLabel-shrink",
                              }
                            }
                          >
                            <WithStyles(ForwardRef(FormLabel))
                              className="MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                              classes={
                                Object {
                                  "asterisk": "MuiInputLabel-asterisk",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "required": "Mui-required",
                                }
                              }
                              data-shrink={false}
                            >
                              <ForwardRef(FormLabel)
                                className="MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                    "colorSecondary": "MuiFormLabel-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "filled": "MuiFormLabel-filled",
                                    "focused": "Mui-focused Mui-focused",
                                    "required": "Mui-required Mui-required",
                                    "root": "MuiFormLabel-root",
                                  }
                                }
                                data-shrink={false}
                              >
                                <label
                                  className="MuiFormLabel-root MuiInputLabel-root makeStyles-textFieldColor-7 MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                  data-shrink={false}
                                >
                                  Overview
                                </label>
                              </ForwardRef(FormLabel)>
                            </WithStyles(ForwardRef(FormLabel))>
                          </ForwardRef(InputLabel)>
                        </WithStyles(ForwardRef(InputLabel))>
                        <WithStyles(ForwardRef(OutlinedInput))
                          autoFocus={false}
                          classes={
                            Object {
                              "notchedOutline": "makeStyles-textFieldColor-7",
                            }
                          }
                          fullWidth={false}
                          label={
                            <React.Fragment>
                              Overview
                            </React.Fragment>
                          }
                          multiline={false}
                        >
                          <ForwardRef(OutlinedInput)
                            autoFocus={false}
                            classes={
                              Object {
                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "focused": "Mui-focused",
                                "input": "MuiOutlinedInput-input",
                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                "marginDense": "MuiOutlinedInput-marginDense",
                                "multiline": "MuiOutlinedInput-multiline",
                                "notchedOutline": "MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7",
                                "root": "MuiOutlinedInput-root",
                              }
                            }
                            fullWidth={false}
                            label={
                              <React.Fragment>
                                Overview
                              </React.Fragment>
                            }
                            multiline={false}
                          >
                            <WithStyles(ForwardRef(InputBase))
                              autoFocus={false}
                              classes={
                                Object {
                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                  "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "input": "MuiOutlinedInput-input",
                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                  "marginDense": "MuiOutlinedInput-marginDense",
                                  "multiline": "MuiOutlinedInput-multiline",
                                  "notchedOutline": null,
                                  "root": "MuiOutlinedInput-root",
                                }
                              }
                              fullWidth={false}
                              inputComponent="input"
                              multiline={false}
                              renderSuffix={[Function]}
                              type="text"
                            >
                              <ForwardRef(InputBase)
                                autoFocus={false}
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                    "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                    "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                    "disabled": "Mui-disabled Mui-disabled",
                                    "error": "Mui-error Mui-error",
                                    "focused": "Mui-focused Mui-focused",
                                    "formControl": "MuiInputBase-formControl",
                                    "fullWidth": "MuiInputBase-fullWidth",
                                    "input": "MuiInputBase-input MuiOutlinedInput-input",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                    "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                    "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                    "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                    "root": "MuiInputBase-root MuiOutlinedInput-root",
                                  }
                                }
                                fullWidth={false}
                                inputComponent="input"
                                multiline={false}
                                renderSuffix={[Function]}
                                type="text"
                              >
                                <div
                                  className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-formControl"
                                  onClick={[Function]}
                                >
                                  <input
                                    aria-invalid={false}
                                    autoFocus={false}
                                    className="MuiInputBase-input MuiOutlinedInput-input"
                                    disabled={false}
                                    onAnimationStart={[Function]}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    required={false}
                                    type="text"
                                  />
                                  <WithStyles(ForwardRef(NotchedOutline))
                                    className="MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                    label={
                                      <React.Fragment>
                                        Overview
                                      </React.Fragment>
                                    }
                                    labelWidth={0}
                                    notched={false}
                                  >
                                    <ForwardRef(NotchedOutline)
                                      className="MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                      classes={
                                        Object {
                                          "legend": "PrivateNotchedOutline-legend-13",
                                          "legendLabelled": "PrivateNotchedOutline-legendLabelled-14",
                                          "legendNotched": "PrivateNotchedOutline-legendNotched-15",
                                          "root": "PrivateNotchedOutline-root-12",
                                        }
                                      }
                                      label={
                                        <React.Fragment>
                                          Overview
                                        </React.Fragment>
                                      }
                                      labelWidth={0}
                                      notched={false}
                                    >
                                      <fieldset
                                        aria-hidden={true}
                                        className="PrivateNotchedOutline-root-12 MuiOutlinedInput-notchedOutline makeStyles-textFieldColor-7"
                                      >
                                        <legend
                                          className="PrivateNotchedOutline-legendLabelled-14"
                                        >
                                          <span>
                                            Overview
                                          </span>
                                        </legend>
                                      </fieldset>
                                    </ForwardRef(NotchedOutline)>
                                  </WithStyles(ForwardRef(NotchedOutline))>
                                </div>
                              </ForwardRef(InputBase)>
                            </WithStyles(ForwardRef(InputBase))>
                          </ForwardRef(OutlinedInput)>
                        </WithStyles(ForwardRef(OutlinedInput))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                </ForwardRef(TextField)>
              </WithStyles(ForwardRef(TextField))>
            </form>
            <div
              className="makeStyles-buttonsBlock-8"
            >
              <button
                className="makeStyles-buttonReset-9 makeStyles-btn-11"
                type="button"
              >
                Reset
              </button>
              <button
                className="makeStyles-buttonSubmit-10 makeStyles-btn-11"
                type="button"
              >
                Submit
              </button>
            </div>
            <div
              data-test="sentinelEnd"
              tabIndex={0}
            />
          </Unstable_TrapFocus>
        </div>
      </Portal>
    </ForwardRef(Portal)>
  </ForwardRef(Modal)>
</AddMovieModal>
`;
